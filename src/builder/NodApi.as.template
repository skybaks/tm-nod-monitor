
namespace api
{
    ##$loop`0`types`type$##
    funcdef ##$var`type.name$##@ ##$var`type.name$##_GetFunction();
    class ##$var`type.name$##_WrapObj
        : WatchTableMixin
        , IWatchTableObject
        ##$if`1`var`type.parent`!=`literal`$##
        , ##$var`type.parent$##_WrapObj
        ##$endif`1$##
    {
        private ##$var`type.name$##_GetFunction@ m_getFunction##$var`type.name$##;

        ##$var`type.name$##_WrapObj(##$var`type.name$##_GetFunction@ getFunction, const string&in name, const string&in qualifiedName)
        {
            ##$if`1`var`type.parent`!=`literal`$##
            super(##$var`type.name$##_GetFunction(this.GetParent_##$var`type.parent$##), name, qualifiedName);
            ##$else`1$##
            m_name = name;
            m_qualifiedName = qualifiedName;
            ##$endif`1$##
            @m_getFunction##$var`type.name$## = getFunction;
        }

        ##$if`1`var`type.parent`!=`literal`$##
        ##$var`type.parent$##@ GetParent_##$var`type.parent$##()
        {
            return m_getFunction##$var`type.name$##();
        }
        ##$endif`1$##

        string get_Value() override
        {
            auto@ self = m_getFunction##$var`type.name$##();
            if (self is null) { return "null"; }
            return "##$var`type.name$##";
        }

        IWatchTableObject@ GetMember(const string&in name) override
        {
            ##$if`1`var`type.parent`!=`literal`$##
            auto@ parent = ##$var`type.parent$##_WrapObj::GetMember(name);
            if (parent !is null)
            {
                return parent;
            }
            ##$endif`1$##

            ##$loop`1`type.members`type_member$##
            ##$if`1`var`type_member.loop.isFirst`==`literal`true`$##
            if (name == "##$var`type_member.name$##")
            ##$else`1$##
            else if (name == "##$var`type_member.name$##")
            ##$endif`1$##
            {
                return Get##$var`type_member.name$##_##$var`type.name$##_WrapObj();
            }
            ##$endloop`1$##
            return null;
        }

        ##$loop`1`type.members`type_member$##
        private ##$var`type_member.type$## Get##$var`type_member.typeClean$##_##$var`type_member.name$##_##$var`type.name$##()
        {
            auto@ self = cast<##$var`type.name$##@>(m_getFunction##$var`type.name$##());
            if (self is null) { return null; }
            return self.##$var`type_member.name$##;
        }
        private ##$var`type_member.typeClean$##_WrapObj@ m_wrapObj##$var`type_member.name$##_##$var`type.name$## = null;
        ##$var`type_member.typeClean$##_WrapObj@ Get##$var`type_member.name$##_##$var`type.name$##_WrapObj()
        {
            if (m_wrapObj##$var`type_member.name$##_##$var`type.name$## is null)
            {
                @m_wrapObj##$var`type_member.name$##_##$var`type.name$## = ##$var`type_member.typeClean$##_WrapObj(
                    ##$var`type_member.typeClean$##_GetFunction(this.Get##$var`type_member.typeClean$##_##$var`type_member.name$##_##$var`type.name$##),
                    "##$var`type_member.name$##",
                    m_qualifiedName + ".##$var`type_member.name$##"
                );
            }
            return m_wrapObj##$var`type_member.name$##_##$var`type.name$##;
        }
        ##$endloop`1$##
    }
    ##$endloop`0$##
}
